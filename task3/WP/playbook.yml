---
- hosts: APP
  become: true
  vars_files:
    - vars/vars.yml

  tasks:
  - name: Install prerequisites
    apt: name=aptitude update_cache=yes state=latest force_apt_get=yes
    tags: [ system ]
  - name: Install mysql .deb package from mysql official website
    apt:
     deb: https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb

  - name: Install LAMP Packages
    apt: name="{{ item }}" update_cache=yes state=latest
    loop: [ 'apache2', 'mysql-server', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php' ]
    tags: [ system ]

  - name: Install PHP Extensions
    apt: name={{ item }} update_cache=yes state=latest
    loop: "{{ php_modules }}"
    tags: [ system ]

  # Apache Configuration
  - name: Create document root
    file:
     path: "/var/www/{{ http_host }}"
     state: directory
     owner: "www-data"
     group: "www-data"
     mode: '0755'
    tags: [ apache ]

  - name: Set up Apache VirtualHost
    template:
     src: files/apache.conf.j2
     dest: /etc/apache2/sites-available/{{ http_conf }}.conf
     #notify: Reload Apache
    become: yes
    #tags: [ apache ]

  - name: Enable rewrite module
    shell: /usr/sbin/a2enmod rewrite
    notify: Reload Apache
    tags: [ apache ]

  - name: Enable new site
    file:
     src: /etc/apache2/sites-available/wordpress.local.conf
     dest: /etc/apache2/sites-enabled/wordpress.local.conf
     state: link
     #shell: /usr/sbin/a2ensite{{ http_conf }}
    notify: Reload Apache
   

  - name: Disable default Apache site
    file:
     path: "/etc/apache2/sites-enabled/000-default"
     state: absent
    notify: Reload Apache

  # MySQL Configuration
  #- name: Set the root password
  #  mysql_user:
  #   name: root
  #   password: "{{ mysql_root_password }}"
  #   host: localhost
  #   host_all: yes 
  #   login_unix_socket: /var/run/mysqld/mysqld.sock
  #   state: present
  #  tags: [ mysql, mysql-root ]

  #- name: Remove all anonymous user accounts
  #  mysql_user:
  #   name: ''
  #   host_all: yes
  #   state: absent
  #   login_user: root
  #   login_password: "{{ mysql_root_password }}"
  #  tags: [ mysql ]

  #- name: Remove all anonymous user accounts
  #  mysql_user:
  #   name: ''
  #   host_all: yes
  #   state: absent
  #   login_user: root
  #   login_password: "{{ mysql_root_password }}"
  #  tags: [ mysql ]


  #- name: delete anonymous MySQL server user for localhost
  #  action: mysql_user user="" state="absent"

  #- name: remove the MySQL test database
  #  action: mysql_db db=test state=absent

  - name: Creates database for WordPress
    mysql_db:
     name: "{{ mysql_db }}"
     state: present
     login_user: root
     login_password: "{{ mysql_root_password }}"
    tags: [ mysql ]

  - name: Create MySQL user for WordPress
    mysql_user:
     name: "{{ mysql_user }}"
     password: "{{ mysql_password }}"
     priv: "{{ mysql_db }}.*:ALL"
     state: present
     login_user: root
     login_password: "{{ mysql_root_password }}"
    tags: [ mysql ]

  # UFW Configuration
  #- name: "UFW - Allow HTTP on port {{ http_port }}"
  #  ufw:
  #   rule: allow
  #   port: '80'
  #   proto: tcp

  # WordPress Configuration
  - name: Download and unpack latest WordPress
    unarchive:
     src: https://wordpress.org/latest.tar.gz
     dest: "/var/www/{{ http_host }}"
     remote_src: yes
     creates: "/var/www/{{ http_host }}/wordpress"
    tags: [ wordpress ]

  - name: Set ownership
    file:
     path: "/var/www/{{ http_host }}"
     state: directory
     recurse: yes
     owner: www-data
     group: www-data
    tags: [ wordpress ]

  - name: Set permissions for directories
    shell: /usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \;
    tags: [ wordpress ]

  - name: Set permissions for files
    shell: /usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \;
    tags: [ wordpress ]

  - name: Set up wp-config
    template:
     src: files/wp-config.php.j2
     dest: /var/www/{{ http_host }}/wordpress/wp-config.php
    tags: [ wordpress ]

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted
